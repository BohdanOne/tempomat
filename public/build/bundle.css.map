{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/Header.svelte",
    "../../src/Main.svelte",
    "../../src/TempoMarkings.svelte",
    "../../src/ValueBox.svelte",
    "../../src/Metronome.svelte"
  ],
  "sourcesContent": [
    "<header class=\"box\">\n  <div class=\"main-heading\">\n\t  <img src=\"./assets/metronome.svg\" alt=\"Colourfull metronome graphic\"/>\n\t  <h1>Tempomat</h1>\n  </div>\n\t<h2>Easily convert BeatsPerMinute to MilliSeconds</h2>\n</header>\n\n<style>\n  header {\n    width: 100%;\n    font-size: 14px;\n    margin: 2em auto;\n  }\n\n  .main-heading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  h1 {\n    color: #ed8240;\n    font-size: 3.2em;\n    font-weight: 400;\n    line-height: 1.1;\n    text-transform: uppercase;\n  }\n\n  h2 {\n    color: #d2ebe9;\n    margin: 0;\n    font-size: .8em;\n    font-weight: 300;\n    text-align: center;\n  }\n\n  img {\n\t\theight: 2.3em;\n  }\n\n  @media (min-width: 600px) {\n    h1 { font-size: 5em; }\n    img { height: 3.4em; }\n    h2 { font-size: 1.3em; }\n  }\n</style>",
    "<script>\n\timport ValueBox from './ValueBox.svelte';\n\timport SubdivisionPicker from './SubdivisionPicker.svelte';\n\timport TempoMarkings from './TempoMarkings.svelte';\n\n\tlet bpm = 120;\n\tlet ms = 500;\n\n\tfunction setBothFromBPM(event) {\n\t\tbpm = +event.detail.value;\n\t\tms = Math.round(60000 / bpm);\n\t}\n\n\tfunction setBothFromMs(event) {\n\t\tms = +event.detail.value;\n\t\tbpm = Math.round((60 / ms) * 1000);\n  }\n\n</script>\n\n<main>\n\t<ValueBox\n\t\tvalueName=\"Beats Per Minute\"\n\t\tvalue={ bpm }\n\t\ton:input={ setBothFromBPM }\n\t/>\n\t<ValueBox\n\t\tvalueName=\"Milliseconds\"\n\t\tvalue={ ms }\n\t\ton:input={ setBothFromMs }\n\t/>\n\t<SubdivisionPicker />\n\t<TempoMarkings { bpm } />\n</main>\n\n<style>\n\tmain {\n\t\twidth: 100%;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr;\n\t\tgrid-gap: 1em;\n\t}\n\n\t@media (max-width: 600px) {\n\t\tmain { grid-template-columns: 1fr; }\n\t}\n</style>",
    "<script>\n  export let bpm;\n  $: tempo = defineTempo(bpm);\n\n  function defineTempo(bpm) {\n      if (bpm < 25) return 'Larghissimo';\n      if (bpm < 45) return 'Grave';\n      if (bpm < 60) return 'Largo / Lento';\n      if (bpm < 66) return 'Larghetto';\n      if (bpm < 76) return 'Adagio';\n      if (bpm < 108) return 'Andante';\n      if (bpm < 120) return 'Moderato';\n      if (bpm < 156) return 'Allegro';\n      if (bpm < 176) return 'Vivace';\n      if (bpm < 200) return 'Presto';\n      if (bpm <= 200) return 'Prestissimo';\n      else return 'choose your tempo';\n    }\n</script>\n\n<section class=\"box\">\n  <h3>Tempo Marking</h3>\n  <p>\n    { tempo }\n  </p>\n</section>\n\n<style>\n  p {\n    font-style: italic;\n    font-weight: 300;\n  }\n</style>",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  export let valueName;\n  export let value;\n\n  const dispatch = createEventDispatcher();\n\n  function handleInput() {\n    dispatch('input', { value: event.target.value });\n  }\n</script>\n\n<section class=\"box\">\n  <label>\n    <input\n      type=\"number\"\n      min=\"1\"\n      { value }\n      on:input={handleInput}\n    />\n    <h3>\n      { valueName }\n    </h3>\n  </label>\n</section>\n\n<style>\n  input {\n    color: #d2ebe9;\n    background: #230444;\n    width: 200px;\n    padding: .5em .1em;\n    font-family: inherit;\n    font-size: 4em;\n    font-weight: 600;\n    border: none;\n    outline-color: #ed8240;\n    -moz-outline-radius: 5px;\n    text-align: center;\n  }\n\n\n  @media (max-width: 600px) {\n    input {\n      font-size: 2em;\n      width: 120px;\n      padding: .5em 0;\n      margin: 0 auto;\n    }\n  }\n</style>",
    "<script>\n  export let ms;\n  let isPlaying = false;\n  let metronome;\n  const click = new Audio('./assets/click.wav');\n  let volume = 1;\n  $: click.volume = volume;\n  $: play(isPlaying, ms);\n\n  function play(isPlaying, interval) {\n    if (isPlaying) {\n  //     console.log('play', interval)\n  //     let startTime = null;\n\n  //     function count(timestamp) {\n  //       if(!startTime) {\n  //         startTime = timestamp;\n  //       }\n  //       let currentTime = timestamp - startTime;\n  //       console.log(currentTime)\n  //       if (currentTime / interval === 1) {\n  //     //   click.play()\n  //     // }\n  //  // Do something based on current time\n\n  //       requestAnimationFrame(count);\n  //     }\n\n  //     count();\n  //   }\n  //   // else {\n  //     // stop click\n    }\n  }\n</script>\n\n<section class=\"box\">\n  <h2>Metronome</h2>\n  <div>\n    <button on:click={ () => isPlaying =! isPlaying }>\n      { isPlaying ? 'Pause' : 'Play' }\n    </button>\n    <label for=\"volume\">\n      Volume\n      <input type=\"range\" name=\"volume\" id=\"volume\" min=\"0\" max=\"1\" step=\".1\" bind:value={ volume }>\n    </label>\n  </div>\n</section>\n\n<style>\n  section {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n  div {\n    display: flex;\n    flex-direction: column;\n  }\n  button {\n    margin: 1em;\n    padding: 1em;\n    border: none;\n    border-radius: 1em;\n    background-color: #d2ebe9;\n    outline-color: #ed8240;\n    font-family: inherit;\n  }\n  button:hover {\n    cursor: pointer;\n    color: #ed8240;\n  }\n  label {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: .8em;\n  }\n  input {\n    margin: 1em;\n  }\n  input:hover {\n    cursor: pointer;\n  }\n\n  @media (max-width: 360px) {\n    section { flex-direction: column; }\n  }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}